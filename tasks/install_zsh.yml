---
- name: Get installed version
  command: zsh --version
  ignore_errors: yes
  changed_when: false
  failed_when: false
  check_mode: no
  register: zsh_installed_version_result
  
- name: Install if the version do not match
  set_fact:
    zsh_reinstall_from_source: true
  when:
    - zsh_installed_version_result.rc == 0
    - zsh_version | string not in zsh_installed_version_result.stdout

- name: Install apt dependencies
  apt:
    name: "{{ zsh_packages_dependencies }}"
    state: present
    update_cache: yes
  become: yes
  when: ansible_os_family == "Debian"

- name: Install yum dependencies
  yum:
    name: "{{ zsh_packages_dependencies }}"
    state: present
    update_cache: yes
  become: yes
  when: ansible_os_family != "Debian"

- name: Install zsh
  block:
    - name: Download zsh archive
      get_url:
        url: "{{ zsh_download_url }}"
        dest: "{{ zsh_download_file }}"
        force: no

    - name: Unpack zsh archive
      unarchive:
        src: "{{ zsh_download_file }}"
        dest: /tmp
        remote_src: yes

    - name: Configure installation
      command: ./configure --with-tcsetpgrp
      args:
        chdir: "{{ zsh_build_directory }}"
        creates: "{{ zsh_build_directory }}/config.status"

    - name: Build zsh
      community.general.make:
        chdir: "{{ zsh_build_directory }}"

    - name: Install zsh
      community.general.make:
        chdir: "{{ zsh_build_directory }}"
        target: install
        params:
          bindir: "{{ zsh_install_bin_prefix }}"
      become: yes

  when: zsh_installed_version_result.rc != 0 or zsh_reinstall_from_source
